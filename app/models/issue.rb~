

class Issue < ActiveRecord::Base

	validates_presence_of :title, :description, :goal
	belongs_to :user
	has_many :votes
	has_many :comments

	def self.Trending
		issues = Issue.all
		#binding.pry
		valued = issues.map {|i| [i, i.trending_heuristic]}
		valued.sort! {|a, b| b[1] <=> a[1]}
		return valued.map{|i| i[0]}
	end

  	def self.New
    		return Issue.order(:created_at)
  	end

  	def self.Top
    		return Issue.order(:votes_count)
  	end

	def trending_heuristic
		result = 0.0
		votes.each do |v| 
			diff = TimeDifference.between(v.created_at, Time.now).in_minutes
			if diff = 0.0
				result += 1.0
			else
				result += 1.0/diff
			end
		end

		return result
	end

  	def owner_name
    u = User.find(user_id)
    "#{u.first_name} #{u.last_name}"
  end
end
